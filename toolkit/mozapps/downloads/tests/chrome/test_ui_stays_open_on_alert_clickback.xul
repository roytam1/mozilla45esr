<?xml version="1.0"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/.  -->
<!--
 * Test bug 397935 to make sure the download manager ui window stays open when
 * it's opened by the user clicking the alert and has the close-when-done pref
 * set.
-->

<window title="Download Manager Test"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        onload="test();">

  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"/>
  <script type="application/javascript"
          src="utils.js"/>

  <script type="application/javascript">
  <![CDATA[

Components.utils.import("resource://gre/modules/Services.jsm");

function test()
{
  var dmui = getDMUI();
  if (!dmui) {
    todo(false, "skip test for toolkit download manager UI");
    return;
  }

  let dm = Cc["@mozilla.org/download-manager;1"].
           getService(Ci.nsIDownloadManager);

  // Empty any old downloads
  dm.DBConnection.executeSimpleSQL("DELETE FROM moz_downloads");

  function setClose(aVal) {
    Services.prefs.setBoolPref("browser.download.manager.closeWhenDone", aVal);
  }

  // Close the UI if necessary
  let wm = Cc["@mozilla.org/appshell/window-mediator;1"].
           getService(Ci.nsIWindowMediator);
  let win = wm.getMostRecentWindow("Download:Manager");
  if (win) win.close();

  // Ensure that the download manager callbacks always use the window UI instead
  // of the panel in the browser's window.
  Services.prefs.setBoolPref("browser.download.useToolkitUI", true);

  let os = Cc["@mozilla.org/observer-service;1"].
           getService(Ci.nsIObserverService);
  const DLMGR_UI_DONE = "download-manager-ui-done";

  let testObs = {
    observe: function(aSubject, aTopic, aData)
    {
      if (aTopic != DLMGR_UI_DONE)
        return;

      let win = aSubject.QueryInterface(Ci.nsIDOMWindow);
      win.focus();

      // Note:  This test will not be valid if the download list is built
      //        synchronously in Startup in downloads.js
      // Make sure the window stays open
      ok(dmui.visible, "Download Manager stays open on alert click");

      win.close();
      setClose(false);
      os.removeObserver(testObs, DLMGR_UI_DONE);

      Services.prefs.clearUserPref("browser.download.manager.closeWhenDone");
      Services.prefs.clearUserPref("browser.download.useToolkitUI");

      SimpleTest.finish();
    }
  };

  // Register with the observer service
  os.addObserver(testObs, DLMGR_UI_DONE, false);

  // Simulate an alert click with pref set to true
  setClose(true);
  dm.QueryInterface(Ci.nsIObserver).observe(null, "alertclickcallback", null);

  SimpleTest.waitForExplicitFinish();
}

  ]]>
  </script>

  <body xmlns="http://www.w3.org/1999/xhtml">
    <p id="display"></p>
    <div id="content" style="display:none;"></div>
    <pre id="test"></pre>
  </body>
</window>
