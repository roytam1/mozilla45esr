# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

test_certificates = (
    'ca-used-as-end-entity.pem',
    'default-ee.pem',
    'delegatedSHA1Signer.pem',
    'delegatedSigner.pem',
    'invalidDelegatedSignerFromIntermediate.pem',
    'invalidDelegatedSignerKeyUsageCrlSigning.pem',
    'invalidDelegatedSignerNoExtKeyUsage.pem',
    'invalidDelegatedSignerWrongExtKeyUsage.pem',
    'multi-tls-feature-bad-ee.pem',
    'multi-tls-feature-good-ee.pem',
    'must-staple-ee.pem',
    'must-staple-ee-with-must-staple-int.pem',
    'must-staple-missing-ee.pem',
    'ocspEEWithIntermediate.pem',
    'ocspOtherEndEntity.pem',
    'other-test-ca.pem',
    'rsa-1016-keysizeDelegatedSigner.pem',
    'test-ca.pem',
    'test-int.pem',
    'test-multi-tls-feature-int.pem',
    'test-must-staple-int.pem',
)

for test_certificate in test_certificates:
    input_file = test_certificate + '.certspec'
    GENERATED_FILES += [test_certificate]
    props = GENERATED_FILES[test_certificate]
    props.script = '../pycert.py'
    props.inputs = [input_file]
    TEST_HARNESS_FILES.xpcshell.security.manager.ssl.tests.unit.ocsp_certs += ['!%s' % test_certificate]

test_keys = (
    'default-ee.key',
    'other-test-ca.key',
    'rsa-1016-keysizeDelegatedSigner.key',
)

for test_key in test_keys:
    input_file = test_key + '.keyspec'
    GENERATED_FILES += [test_key]
    props = GENERATED_FILES[test_key]
    props.script = '../pykey.py'
    props.inputs = [input_file]
    TEST_HARNESS_FILES.xpcshell.security.manager.ssl.tests.unit.ocsp_certs += ['!%s' % test_key]
